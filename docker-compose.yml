version: '3.5'
services:
  nginx:
    container_name: ${APP_NAME}_nginx
    restart: always
    privileged: true
    working_dir: /eznat_server
    build:
      context: ./docker/build/nginx
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ./:/eznat_server:rw
      - ./docker/nginx/config/nginx.conf:/usr/local/nginx/conf/nginx.conf:ro
      - ./docker/nginx/config/conf.d:/usr/local/nginx/conf/conf.d:rw
      - ./docker/nginx/log:/var/log/nginx:rw
    command: ["sh", "-c", "exec nginx -g 'daemon off;'"]
  php:
    container_name: ${APP_NAME}_php
    restart: always
    privileged: true
    user: root
    working_dir: /eznat_server
    links:
      - mysql
    build:
      context: ./docker/build/php
    volumes:
      - ./:/eznat_server:rw
      - ./docker/php/conf/php-fpm.conf:/usr/local/etc/php/php-fpm.conf
      - ./docker/php/conf/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/log:/var/log:rw
    ports:
      - ${PORT_MAP_OPEN}
      - ${HTTP_MAP_SERVER_PORT}:80
      - ${HTTPS_MAP_SERVER_PORT}:443
      - "${CHANNEL_PORT}:${CHANNEL_PORT}"
    command:
          - sh
          - -c
          - |
            set -eux \
            && composer install \
            && php artisan key:generate \
            && chown www-data:www-data * -R \
            && php eznat/server.php start -d \
            && php-fpm
  mysql:
    image: mysql:5.7
    container_name: ${APP_NAME}_mysql
    restart: always
    privileged: true
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./:/eznat_server:rw
      - ./docker/mysql/data:/var/lib/mysql:rw
      - ./docker/mysql/config/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
      - ./docker/mysql/log:/var/log/mysql:rw
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
  node:
    user: "root"
    build:
      context: ./docker/build/node
    container_name: ${APP_NAME}_node
    privileged: true
    working_dir: /eznat_server/eznat_web
    volumes:
      - ./:/eznat_server:rw
    command:
      - sh
      - -c
      - |
        set -eux \
        && npm install \
        && npm run build:prod
networks:
  default:
    name: ${APP_NAME}-net
